apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-ocr-api
  namespace: {{ .Release.Namespace }}
  annotations:
    keel.sh/policy: force
    keel.sh/match-tag: 'true'
    keel.sh/trigger: poll
spec:
  replicas: {{ .Values.replicaCount}}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-ocr-api
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-ocr-api
    spec:
      serviceAccountName: {{ .Release.Name }}-ocr-api
      containers:
        - name: {{ .Release.Name }}-ocr-api
          image: ghcr.io/swisstopo/swissgeol-ocr-api:{{ .Values.ocr.version | default "latest" }}
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
          env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: s3AccessKey
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: s3SecretKey
            - name: AWS_DEFAULT_REGION
              value: eu-central-1
            - name: S3_INPUT_BUCKET
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-config
                  key: s3Bucket
            - name: S3_INPUT_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-config
                  key: s3Endpoint
            - name: S3_INPUT_FOLDER
              value: ''
            - name: S3_OUTPUT_BUCKET
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-config
                  key: s3Bucket
            - name: S3_OUTPUT_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-config
                  key: s3Endpoint
            - name: S3_OUTPUT_FOLDER
              value: ''
            - name: CONFIDENCE_THRESHOLD
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-config
                  key: ocrConfidenceThreshold
            - name: USE_AGGRESSIVE_STRATEGY
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-config
                  key: ocrUseAggressiveStrategy
            - name: SKIP_PROCESSING
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-config
                  key: ocrSkipProcessing
            - name: TMP_PATH
              value: /tmp/ocr
            - name: TZ
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-config
                  key: timezone
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-ocr-api
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    app: {{ .Release.Name }}-ocr-api
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8000
